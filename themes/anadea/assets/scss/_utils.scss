@use "sass:math";

@mixin multiline-ellipsis($lines-to-show: 3) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre-wrap; /* let the text wrap preserving spaces */
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show; /* start showing ellipsis when 3rd line is reached */
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
}

$default-min-bp: 576px;
$default-max-bp: 1200px;

@function rnd($number, $places: 0) {
  $n: 1;

  @if $places > 0 {
    @for $i from 1 through $places {
      $n: $n * 10;
    }
  }

  @return math.div(math.round($number * $n), $n);
}

@function clamped($min-px, $max-px, $min-bp: $default-min-bp, $max-bp: $default-max-bp) {
  $slope: math.div($max-px - $min-px, $max-bp - $min-bp);
  $slope-vw: rnd($slope * 100, 2);
  $intercept: rnd($min-px - $slope * $min-bp, 2);
  $min: rnd($min-px, 2);
  $max: rnd($max-px, 2);

  @return clamp(#{$min}, #{$slope-vw}vw + #{$intercept}, #{$max});
}

@mixin reset-list {
  padding: 0;
  margin: 0;
  list-style: none;
}

@mixin focus-ring($offset-px: 0) {
  outline: var(--default-focus-ring);
  outline: 1px auto Highlight; // firefox
  outline-offset: $offset-px;
}
